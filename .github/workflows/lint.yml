name: Lint

on:
  push:
    branches: ["main"]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy-rustdoc:
    name: Clippy & Rustdoc

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - wasm32-unknown-unknown
        rust:
          - { version: stable, component: "", rustflags: "", args: "" }
        extra_clippy_args:
          - ""
        include:
          - target: wasm32-unknown-unknown
            rust:
              version: nightly
              component: ",rust-src"
              flags: "-Ctarget-feature=+atomics,+bulk-memory"
              args: "-Zbuild-std=panic_abort,std"
              # Ignore incompatible_msrv checks for targets that run on nightly only anyway
              extra_clippy_args: "-A clippy::incompatible_msrv"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        run: |
          rustup toolchain install ${{ matrix.rust.version }} --profile minimal --component clippy${{ matrix.rust.component }} --allow-downgrade --target ${{ matrix.target }}
          rustup default ${{ matrix.rust.version }}
      - name: Run Clippy
        env:
          RUSTFLAGS: ${{ matrix.rust.flags }}
        run: cargo clippy --all-targets --target ${{ matrix.target }} ${{ matrix.rust.args }} -- -D warnings ${{ matrix.extra_clippy_args }}
      - name: Run Rustdoc
        env:
          RUSTDOCFLAGS: -D warnings ${{ matrix.rust.flags }}
        run: cargo doc --no-deps --document-private-items --target ${{ matrix.target }} ${{ matrix.rust.args }}
